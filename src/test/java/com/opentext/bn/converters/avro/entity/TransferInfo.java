/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.opentext.bn.converters.avro.entity;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TransferInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6833028303809595047L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TransferInfo\",\"namespace\":\"com.opentext.bn.converters.avro.entity\",\"fields\":[{\"name\":\"ackTimeStamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"deliveryReceipt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"filename\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"firstByteTimestamp\",\"type\":\"long\"},{\"name\":\"isAck\",\"type\":\"boolean\"},{\"name\":\"lastByteTimestamp\",\"type\":\"long\"},{\"name\":\"payloadSizeInBytes\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receiverMailbox\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"remoteHost\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"remotePort\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"retryCount\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"senderMailbox\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sessionStartTimestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transferDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ProcessingParam\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TransferInfo> ENCODER =
      new BinaryMessageEncoder<TransferInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TransferInfo> DECODER =
      new BinaryMessageDecoder<TransferInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TransferInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TransferInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TransferInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TransferInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TransferInfo from a ByteBuffer. */
  public static TransferInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Long ackTimeStamp;
   private java.lang.String deliveryReceipt;
   private java.lang.String filename;
   private long firstByteTimestamp;
   private boolean isAck;
   private long lastByteTimestamp;
   private long payloadSizeInBytes;
   private java.lang.String protocol;
   private java.lang.String receiverMailbox;
   private java.lang.String remoteHost;
   private java.lang.String remotePort;
   private java.lang.Integer retryCount;
   private java.lang.String senderMailbox;
   private java.lang.Long sessionStartTimestamp;
   private java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> transferDetails;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TransferInfo() {}

  /**
   * All-args constructor.
   * @param ackTimeStamp The new value for ackTimeStamp
   * @param deliveryReceipt The new value for deliveryReceipt
   * @param filename The new value for filename
   * @param firstByteTimestamp The new value for firstByteTimestamp
   * @param isAck The new value for isAck
   * @param lastByteTimestamp The new value for lastByteTimestamp
   * @param payloadSizeInBytes The new value for payloadSizeInBytes
   * @param protocol The new value for protocol
   * @param receiverMailbox The new value for receiverMailbox
   * @param remoteHost The new value for remoteHost
   * @param remotePort The new value for remotePort
   * @param retryCount The new value for retryCount
   * @param senderMailbox The new value for senderMailbox
   * @param sessionStartTimestamp The new value for sessionStartTimestamp
   * @param transferDetails The new value for transferDetails
   */
  public TransferInfo(java.lang.Long ackTimeStamp, java.lang.String deliveryReceipt, java.lang.String filename, java.lang.Long firstByteTimestamp, java.lang.Boolean isAck, java.lang.Long lastByteTimestamp, java.lang.Long payloadSizeInBytes, java.lang.String protocol, java.lang.String receiverMailbox, java.lang.String remoteHost, java.lang.String remotePort, java.lang.Integer retryCount, java.lang.String senderMailbox, java.lang.Long sessionStartTimestamp, java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> transferDetails) {
    this.ackTimeStamp = ackTimeStamp;
    this.deliveryReceipt = deliveryReceipt;
    this.filename = filename;
    this.firstByteTimestamp = firstByteTimestamp;
    this.isAck = isAck;
    this.lastByteTimestamp = lastByteTimestamp;
    this.payloadSizeInBytes = payloadSizeInBytes;
    this.protocol = protocol;
    this.receiverMailbox = receiverMailbox;
    this.remoteHost = remoteHost;
    this.remotePort = remotePort;
    this.retryCount = retryCount;
    this.senderMailbox = senderMailbox;
    this.sessionStartTimestamp = sessionStartTimestamp;
    this.transferDetails = transferDetails;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ackTimeStamp;
    case 1: return deliveryReceipt;
    case 2: return filename;
    case 3: return firstByteTimestamp;
    case 4: return isAck;
    case 5: return lastByteTimestamp;
    case 6: return payloadSizeInBytes;
    case 7: return protocol;
    case 8: return receiverMailbox;
    case 9: return remoteHost;
    case 10: return remotePort;
    case 11: return retryCount;
    case 12: return senderMailbox;
    case 13: return sessionStartTimestamp;
    case 14: return transferDetails;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ackTimeStamp = (java.lang.Long)value$; break;
    case 1: deliveryReceipt = (java.lang.String)value$; break;
    case 2: filename = (java.lang.String)value$; break;
    case 3: firstByteTimestamp = (java.lang.Long)value$; break;
    case 4: isAck = (java.lang.Boolean)value$; break;
    case 5: lastByteTimestamp = (java.lang.Long)value$; break;
    case 6: payloadSizeInBytes = (java.lang.Long)value$; break;
    case 7: protocol = (java.lang.String)value$; break;
    case 8: receiverMailbox = (java.lang.String)value$; break;
    case 9: remoteHost = (java.lang.String)value$; break;
    case 10: remotePort = (java.lang.String)value$; break;
    case 11: retryCount = (java.lang.Integer)value$; break;
    case 12: senderMailbox = (java.lang.String)value$; break;
    case 13: sessionStartTimestamp = (java.lang.Long)value$; break;
    case 14: transferDetails = (java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ackTimeStamp' field.
   * @return The value of the 'ackTimeStamp' field.
   */
  public java.lang.Long getAckTimeStamp() {
    return ackTimeStamp;
  }


  /**
   * Gets the value of the 'deliveryReceipt' field.
   * @return The value of the 'deliveryReceipt' field.
   */
  public java.lang.String getDeliveryReceipt() {
    return deliveryReceipt;
  }


  /**
   * Gets the value of the 'filename' field.
   * @return The value of the 'filename' field.
   */
  public java.lang.String getFilename() {
    return filename;
  }


  /**
   * Gets the value of the 'firstByteTimestamp' field.
   * @return The value of the 'firstByteTimestamp' field.
   */
  public java.lang.Long getFirstByteTimestamp() {
    return firstByteTimestamp;
  }


  /**
   * Gets the value of the 'isAck' field.
   * @return The value of the 'isAck' field.
   */
  public java.lang.Boolean getIsAck() {
    return isAck;
  }


  /**
   * Gets the value of the 'lastByteTimestamp' field.
   * @return The value of the 'lastByteTimestamp' field.
   */
  public java.lang.Long getLastByteTimestamp() {
    return lastByteTimestamp;
  }


  /**
   * Gets the value of the 'payloadSizeInBytes' field.
   * @return The value of the 'payloadSizeInBytes' field.
   */
  public java.lang.Long getPayloadSizeInBytes() {
    return payloadSizeInBytes;
  }


  /**
   * Gets the value of the 'protocol' field.
   * @return The value of the 'protocol' field.
   */
  public java.lang.String getProtocol() {
    return protocol;
  }


  /**
   * Gets the value of the 'receiverMailbox' field.
   * @return The value of the 'receiverMailbox' field.
   */
  public java.lang.String getReceiverMailbox() {
    return receiverMailbox;
  }


  /**
   * Gets the value of the 'remoteHost' field.
   * @return The value of the 'remoteHost' field.
   */
  public java.lang.String getRemoteHost() {
    return remoteHost;
  }


  /**
   * Gets the value of the 'remotePort' field.
   * @return The value of the 'remotePort' field.
   */
  public java.lang.String getRemotePort() {
    return remotePort;
  }


  /**
   * Gets the value of the 'retryCount' field.
   * @return The value of the 'retryCount' field.
   */
  public java.lang.Integer getRetryCount() {
    return retryCount;
  }


  /**
   * Gets the value of the 'senderMailbox' field.
   * @return The value of the 'senderMailbox' field.
   */
  public java.lang.String getSenderMailbox() {
    return senderMailbox;
  }


  /**
   * Gets the value of the 'sessionStartTimestamp' field.
   * @return The value of the 'sessionStartTimestamp' field.
   */
  public java.lang.Long getSessionStartTimestamp() {
    return sessionStartTimestamp;
  }


  /**
   * Gets the value of the 'transferDetails' field.
   * @return The value of the 'transferDetails' field.
   */
  public java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> getTransferDetails() {
    return transferDetails;
  }


  /**
   * Creates a new TransferInfo RecordBuilder.
   * @return A new TransferInfo RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.TransferInfo.Builder newBuilder() {
    return new com.opentext.bn.converters.avro.entity.TransferInfo.Builder();
  }

  /**
   * Creates a new TransferInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TransferInfo RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.TransferInfo.Builder newBuilder(com.opentext.bn.converters.avro.entity.TransferInfo.Builder other) {
    return new com.opentext.bn.converters.avro.entity.TransferInfo.Builder(other);
  }

  /**
   * Creates a new TransferInfo RecordBuilder by copying an existing TransferInfo instance.
   * @param other The existing instance to copy.
   * @return A new TransferInfo RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.TransferInfo.Builder newBuilder(com.opentext.bn.converters.avro.entity.TransferInfo other) {
    return new com.opentext.bn.converters.avro.entity.TransferInfo.Builder(other);
  }

  /**
   * RecordBuilder for TransferInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TransferInfo>
    implements org.apache.avro.data.RecordBuilder<TransferInfo> {

    private java.lang.Long ackTimeStamp;
    private java.lang.String deliveryReceipt;
    private java.lang.String filename;
    private long firstByteTimestamp;
    private boolean isAck;
    private long lastByteTimestamp;
    private long payloadSizeInBytes;
    private java.lang.String protocol;
    private java.lang.String receiverMailbox;
    private java.lang.String remoteHost;
    private java.lang.String remotePort;
    private java.lang.Integer retryCount;
    private java.lang.String senderMailbox;
    private java.lang.Long sessionStartTimestamp;
    private java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> transferDetails;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.TransferInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ackTimeStamp)) {
        this.ackTimeStamp = data().deepCopy(fields()[0].schema(), other.ackTimeStamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deliveryReceipt)) {
        this.deliveryReceipt = data().deepCopy(fields()[1].schema(), other.deliveryReceipt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.filename)) {
        this.filename = data().deepCopy(fields()[2].schema(), other.filename);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.firstByteTimestamp)) {
        this.firstByteTimestamp = data().deepCopy(fields()[3].schema(), other.firstByteTimestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isAck)) {
        this.isAck = data().deepCopy(fields()[4].schema(), other.isAck);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.lastByteTimestamp)) {
        this.lastByteTimestamp = data().deepCopy(fields()[5].schema(), other.lastByteTimestamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.payloadSizeInBytes)) {
        this.payloadSizeInBytes = data().deepCopy(fields()[6].schema(), other.payloadSizeInBytes);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.protocol)) {
        this.protocol = data().deepCopy(fields()[7].schema(), other.protocol);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.receiverMailbox)) {
        this.receiverMailbox = data().deepCopy(fields()[8].schema(), other.receiverMailbox);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.remoteHost)) {
        this.remoteHost = data().deepCopy(fields()[9].schema(), other.remoteHost);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.remotePort)) {
        this.remotePort = data().deepCopy(fields()[10].schema(), other.remotePort);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.retryCount)) {
        this.retryCount = data().deepCopy(fields()[11].schema(), other.retryCount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.senderMailbox)) {
        this.senderMailbox = data().deepCopy(fields()[12].schema(), other.senderMailbox);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.sessionStartTimestamp)) {
        this.sessionStartTimestamp = data().deepCopy(fields()[13].schema(), other.sessionStartTimestamp);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.transferDetails)) {
        this.transferDetails = data().deepCopy(fields()[14].schema(), other.transferDetails);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TransferInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.TransferInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.ackTimeStamp)) {
        this.ackTimeStamp = data().deepCopy(fields()[0].schema(), other.ackTimeStamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deliveryReceipt)) {
        this.deliveryReceipt = data().deepCopy(fields()[1].schema(), other.deliveryReceipt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.filename)) {
        this.filename = data().deepCopy(fields()[2].schema(), other.filename);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.firstByteTimestamp)) {
        this.firstByteTimestamp = data().deepCopy(fields()[3].schema(), other.firstByteTimestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isAck)) {
        this.isAck = data().deepCopy(fields()[4].schema(), other.isAck);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.lastByteTimestamp)) {
        this.lastByteTimestamp = data().deepCopy(fields()[5].schema(), other.lastByteTimestamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.payloadSizeInBytes)) {
        this.payloadSizeInBytes = data().deepCopy(fields()[6].schema(), other.payloadSizeInBytes);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.protocol)) {
        this.protocol = data().deepCopy(fields()[7].schema(), other.protocol);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.receiverMailbox)) {
        this.receiverMailbox = data().deepCopy(fields()[8].schema(), other.receiverMailbox);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.remoteHost)) {
        this.remoteHost = data().deepCopy(fields()[9].schema(), other.remoteHost);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.remotePort)) {
        this.remotePort = data().deepCopy(fields()[10].schema(), other.remotePort);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.retryCount)) {
        this.retryCount = data().deepCopy(fields()[11].schema(), other.retryCount);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.senderMailbox)) {
        this.senderMailbox = data().deepCopy(fields()[12].schema(), other.senderMailbox);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.sessionStartTimestamp)) {
        this.sessionStartTimestamp = data().deepCopy(fields()[13].schema(), other.sessionStartTimestamp);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.transferDetails)) {
        this.transferDetails = data().deepCopy(fields()[14].schema(), other.transferDetails);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'ackTimeStamp' field.
      * @return The value.
      */
    public java.lang.Long getAckTimeStamp() {
      return ackTimeStamp;
    }

    /**
      * Sets the value of the 'ackTimeStamp' field.
      * @param value The value of 'ackTimeStamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setAckTimeStamp(java.lang.Long value) {
      validate(fields()[0], value);
      this.ackTimeStamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ackTimeStamp' field has been set.
      * @return True if the 'ackTimeStamp' field has been set, false otherwise.
      */
    public boolean hasAckTimeStamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ackTimeStamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearAckTimeStamp() {
      ackTimeStamp = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryReceipt' field.
      * @return The value.
      */
    public java.lang.String getDeliveryReceipt() {
      return deliveryReceipt;
    }

    /**
      * Sets the value of the 'deliveryReceipt' field.
      * @param value The value of 'deliveryReceipt'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setDeliveryReceipt(java.lang.String value) {
      validate(fields()[1], value);
      this.deliveryReceipt = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryReceipt' field has been set.
      * @return True if the 'deliveryReceipt' field has been set, false otherwise.
      */
    public boolean hasDeliveryReceipt() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'deliveryReceipt' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearDeliveryReceipt() {
      deliveryReceipt = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'filename' field.
      * @return The value.
      */
    public java.lang.String getFilename() {
      return filename;
    }

    /**
      * Sets the value of the 'filename' field.
      * @param value The value of 'filename'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setFilename(java.lang.String value) {
      validate(fields()[2], value);
      this.filename = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'filename' field has been set.
      * @return True if the 'filename' field has been set, false otherwise.
      */
    public boolean hasFilename() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'filename' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearFilename() {
      filename = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstByteTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getFirstByteTimestamp() {
      return firstByteTimestamp;
    }

    /**
      * Sets the value of the 'firstByteTimestamp' field.
      * @param value The value of 'firstByteTimestamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setFirstByteTimestamp(long value) {
      validate(fields()[3], value);
      this.firstByteTimestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'firstByteTimestamp' field has been set.
      * @return True if the 'firstByteTimestamp' field has been set, false otherwise.
      */
    public boolean hasFirstByteTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'firstByteTimestamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearFirstByteTimestamp() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'isAck' field.
      * @return The value.
      */
    public java.lang.Boolean getIsAck() {
      return isAck;
    }

    /**
      * Sets the value of the 'isAck' field.
      * @param value The value of 'isAck'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setIsAck(boolean value) {
      validate(fields()[4], value);
      this.isAck = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'isAck' field has been set.
      * @return True if the 'isAck' field has been set, false otherwise.
      */
    public boolean hasIsAck() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'isAck' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearIsAck() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastByteTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getLastByteTimestamp() {
      return lastByteTimestamp;
    }

    /**
      * Sets the value of the 'lastByteTimestamp' field.
      * @param value The value of 'lastByteTimestamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setLastByteTimestamp(long value) {
      validate(fields()[5], value);
      this.lastByteTimestamp = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'lastByteTimestamp' field has been set.
      * @return True if the 'lastByteTimestamp' field has been set, false otherwise.
      */
    public boolean hasLastByteTimestamp() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'lastByteTimestamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearLastByteTimestamp() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'payloadSizeInBytes' field.
      * @return The value.
      */
    public java.lang.Long getPayloadSizeInBytes() {
      return payloadSizeInBytes;
    }

    /**
      * Sets the value of the 'payloadSizeInBytes' field.
      * @param value The value of 'payloadSizeInBytes'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setPayloadSizeInBytes(long value) {
      validate(fields()[6], value);
      this.payloadSizeInBytes = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'payloadSizeInBytes' field has been set.
      * @return True if the 'payloadSizeInBytes' field has been set, false otherwise.
      */
    public boolean hasPayloadSizeInBytes() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'payloadSizeInBytes' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearPayloadSizeInBytes() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'protocol' field.
      * @return The value.
      */
    public java.lang.String getProtocol() {
      return protocol;
    }

    /**
      * Sets the value of the 'protocol' field.
      * @param value The value of 'protocol'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setProtocol(java.lang.String value) {
      validate(fields()[7], value);
      this.protocol = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'protocol' field has been set.
      * @return True if the 'protocol' field has been set, false otherwise.
      */
    public boolean hasProtocol() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'protocol' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearProtocol() {
      protocol = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiverMailbox' field.
      * @return The value.
      */
    public java.lang.String getReceiverMailbox() {
      return receiverMailbox;
    }

    /**
      * Sets the value of the 'receiverMailbox' field.
      * @param value The value of 'receiverMailbox'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setReceiverMailbox(java.lang.String value) {
      validate(fields()[8], value);
      this.receiverMailbox = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'receiverMailbox' field has been set.
      * @return True if the 'receiverMailbox' field has been set, false otherwise.
      */
    public boolean hasReceiverMailbox() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'receiverMailbox' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearReceiverMailbox() {
      receiverMailbox = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'remoteHost' field.
      * @return The value.
      */
    public java.lang.String getRemoteHost() {
      return remoteHost;
    }

    /**
      * Sets the value of the 'remoteHost' field.
      * @param value The value of 'remoteHost'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setRemoteHost(java.lang.String value) {
      validate(fields()[9], value);
      this.remoteHost = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'remoteHost' field has been set.
      * @return True if the 'remoteHost' field has been set, false otherwise.
      */
    public boolean hasRemoteHost() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'remoteHost' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearRemoteHost() {
      remoteHost = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'remotePort' field.
      * @return The value.
      */
    public java.lang.String getRemotePort() {
      return remotePort;
    }

    /**
      * Sets the value of the 'remotePort' field.
      * @param value The value of 'remotePort'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setRemotePort(java.lang.String value) {
      validate(fields()[10], value);
      this.remotePort = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'remotePort' field has been set.
      * @return True if the 'remotePort' field has been set, false otherwise.
      */
    public boolean hasRemotePort() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'remotePort' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearRemotePort() {
      remotePort = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'retryCount' field.
      * @return The value.
      */
    public java.lang.Integer getRetryCount() {
      return retryCount;
    }

    /**
      * Sets the value of the 'retryCount' field.
      * @param value The value of 'retryCount'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setRetryCount(java.lang.Integer value) {
      validate(fields()[11], value);
      this.retryCount = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'retryCount' field has been set.
      * @return True if the 'retryCount' field has been set, false otherwise.
      */
    public boolean hasRetryCount() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'retryCount' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearRetryCount() {
      retryCount = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'senderMailbox' field.
      * @return The value.
      */
    public java.lang.String getSenderMailbox() {
      return senderMailbox;
    }

    /**
      * Sets the value of the 'senderMailbox' field.
      * @param value The value of 'senderMailbox'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setSenderMailbox(java.lang.String value) {
      validate(fields()[12], value);
      this.senderMailbox = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'senderMailbox' field has been set.
      * @return True if the 'senderMailbox' field has been set, false otherwise.
      */
    public boolean hasSenderMailbox() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'senderMailbox' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearSenderMailbox() {
      senderMailbox = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'sessionStartTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getSessionStartTimestamp() {
      return sessionStartTimestamp;
    }

    /**
      * Sets the value of the 'sessionStartTimestamp' field.
      * @param value The value of 'sessionStartTimestamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setSessionStartTimestamp(java.lang.Long value) {
      validate(fields()[13], value);
      this.sessionStartTimestamp = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'sessionStartTimestamp' field has been set.
      * @return True if the 'sessionStartTimestamp' field has been set, false otherwise.
      */
    public boolean hasSessionStartTimestamp() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'sessionStartTimestamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearSessionStartTimestamp() {
      sessionStartTimestamp = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'transferDetails' field.
      * @return The value.
      */
    public java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> getTransferDetails() {
      return transferDetails;
    }

    /**
      * Sets the value of the 'transferDetails' field.
      * @param value The value of 'transferDetails'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder setTransferDetails(java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> value) {
      validate(fields()[14], value);
      this.transferDetails = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'transferDetails' field has been set.
      * @return True if the 'transferDetails' field has been set, false otherwise.
      */
    public boolean hasTransferDetails() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'transferDetails' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.TransferInfo.Builder clearTransferDetails() {
      transferDetails = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TransferInfo build() {
      try {
        TransferInfo record = new TransferInfo();
        record.ackTimeStamp = fieldSetFlags()[0] ? this.ackTimeStamp : (java.lang.Long) defaultValue(fields()[0]);
        record.deliveryReceipt = fieldSetFlags()[1] ? this.deliveryReceipt : (java.lang.String) defaultValue(fields()[1]);
        record.filename = fieldSetFlags()[2] ? this.filename : (java.lang.String) defaultValue(fields()[2]);
        record.firstByteTimestamp = fieldSetFlags()[3] ? this.firstByteTimestamp : (java.lang.Long) defaultValue(fields()[3]);
        record.isAck = fieldSetFlags()[4] ? this.isAck : (java.lang.Boolean) defaultValue(fields()[4]);
        record.lastByteTimestamp = fieldSetFlags()[5] ? this.lastByteTimestamp : (java.lang.Long) defaultValue(fields()[5]);
        record.payloadSizeInBytes = fieldSetFlags()[6] ? this.payloadSizeInBytes : (java.lang.Long) defaultValue(fields()[6]);
        record.protocol = fieldSetFlags()[7] ? this.protocol : (java.lang.String) defaultValue(fields()[7]);
        record.receiverMailbox = fieldSetFlags()[8] ? this.receiverMailbox : (java.lang.String) defaultValue(fields()[8]);
        record.remoteHost = fieldSetFlags()[9] ? this.remoteHost : (java.lang.String) defaultValue(fields()[9]);
        record.remotePort = fieldSetFlags()[10] ? this.remotePort : (java.lang.String) defaultValue(fields()[10]);
        record.retryCount = fieldSetFlags()[11] ? this.retryCount : (java.lang.Integer) defaultValue(fields()[11]);
        record.senderMailbox = fieldSetFlags()[12] ? this.senderMailbox : (java.lang.String) defaultValue(fields()[12]);
        record.sessionStartTimestamp = fieldSetFlags()[13] ? this.sessionStartTimestamp : (java.lang.Long) defaultValue(fields()[13]);
        record.transferDetails = fieldSetFlags()[14] ? this.transferDetails : (java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam>) defaultValue(fields()[14]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TransferInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<TransferInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TransferInfo>
    READER$ = (org.apache.avro.io.DatumReader<TransferInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
