/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.opentext.bn.converters.avro.entity;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ProcessingStages extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3918860987701412806L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProcessingStages\",\"namespace\":\"com.opentext.bn.converters.avro.entity\",\"fields\":[{\"name\":\"stageDetails\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ProcessingParam\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}],\"default\":null},{\"name\":\"stageEndTimestamp\",\"type\":\"long\"},{\"name\":\"stageId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"stageName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"stageStartTimestamp\",\"type\":\"long\"},{\"name\":\"errorInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ErrorInfo\",\"fields\":[{\"name\":\"errorCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"externalErrorMessage\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"internalErrorMessage\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"isPayloadRelated\",\"type\":\"boolean\"}]}],\"default\":null},{\"name\":\"contentId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProcessingStages> ENCODER =
      new BinaryMessageEncoder<ProcessingStages>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProcessingStages> DECODER =
      new BinaryMessageDecoder<ProcessingStages>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ProcessingStages> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ProcessingStages> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProcessingStages>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ProcessingStages to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ProcessingStages from a ByteBuffer. */
  public static ProcessingStages fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> stageDetails;
   private long stageEndTimestamp;
   private java.lang.String stageId;
   private java.lang.String stageName;
   private long stageStartTimestamp;
   private com.opentext.bn.converters.avro.entity.ErrorInfo errorInfo;
   private java.lang.String contentId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProcessingStages() {}

  /**
   * All-args constructor.
   * @param stageDetails The new value for stageDetails
   * @param stageEndTimestamp The new value for stageEndTimestamp
   * @param stageId The new value for stageId
   * @param stageName The new value for stageName
   * @param stageStartTimestamp The new value for stageStartTimestamp
   * @param errorInfo The new value for errorInfo
   * @param contentId The new value for contentId
   */
  public ProcessingStages(java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> stageDetails, java.lang.Long stageEndTimestamp, java.lang.String stageId, java.lang.String stageName, java.lang.Long stageStartTimestamp, com.opentext.bn.converters.avro.entity.ErrorInfo errorInfo, java.lang.String contentId) {
    this.stageDetails = stageDetails;
    this.stageEndTimestamp = stageEndTimestamp;
    this.stageId = stageId;
    this.stageName = stageName;
    this.stageStartTimestamp = stageStartTimestamp;
    this.errorInfo = errorInfo;
    this.contentId = contentId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return stageDetails;
    case 1: return stageEndTimestamp;
    case 2: return stageId;
    case 3: return stageName;
    case 4: return stageStartTimestamp;
    case 5: return errorInfo;
    case 6: return contentId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: stageDetails = (java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam>)value$; break;
    case 1: stageEndTimestamp = (java.lang.Long)value$; break;
    case 2: stageId = (java.lang.String)value$; break;
    case 3: stageName = (java.lang.String)value$; break;
    case 4: stageStartTimestamp = (java.lang.Long)value$; break;
    case 5: errorInfo = (com.opentext.bn.converters.avro.entity.ErrorInfo)value$; break;
    case 6: contentId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'stageDetails' field.
   * @return The value of the 'stageDetails' field.
   */
  public java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> getStageDetails() {
    return stageDetails;
  }


  /**
   * Gets the value of the 'stageEndTimestamp' field.
   * @return The value of the 'stageEndTimestamp' field.
   */
  public java.lang.Long getStageEndTimestamp() {
    return stageEndTimestamp;
  }


  /**
   * Gets the value of the 'stageId' field.
   * @return The value of the 'stageId' field.
   */
  public java.lang.String getStageId() {
    return stageId;
  }


  /**
   * Gets the value of the 'stageName' field.
   * @return The value of the 'stageName' field.
   */
  public java.lang.String getStageName() {
    return stageName;
  }


  /**
   * Gets the value of the 'stageStartTimestamp' field.
   * @return The value of the 'stageStartTimestamp' field.
   */
  public java.lang.Long getStageStartTimestamp() {
    return stageStartTimestamp;
  }


  /**
   * Gets the value of the 'errorInfo' field.
   * @return The value of the 'errorInfo' field.
   */
  public com.opentext.bn.converters.avro.entity.ErrorInfo getErrorInfo() {
    return errorInfo;
  }


  /**
   * Gets the value of the 'contentId' field.
   * @return The value of the 'contentId' field.
   */
  public java.lang.String getContentId() {
    return contentId;
  }


  /**
   * Creates a new ProcessingStages RecordBuilder.
   * @return A new ProcessingStages RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.ProcessingStages.Builder newBuilder() {
    return new com.opentext.bn.converters.avro.entity.ProcessingStages.Builder();
  }

  /**
   * Creates a new ProcessingStages RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProcessingStages RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.ProcessingStages.Builder newBuilder(com.opentext.bn.converters.avro.entity.ProcessingStages.Builder other) {
    return new com.opentext.bn.converters.avro.entity.ProcessingStages.Builder(other);
  }

  /**
   * Creates a new ProcessingStages RecordBuilder by copying an existing ProcessingStages instance.
   * @param other The existing instance to copy.
   * @return A new ProcessingStages RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.ProcessingStages.Builder newBuilder(com.opentext.bn.converters.avro.entity.ProcessingStages other) {
    return new com.opentext.bn.converters.avro.entity.ProcessingStages.Builder(other);
  }

  /**
   * RecordBuilder for ProcessingStages instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProcessingStages>
    implements org.apache.avro.data.RecordBuilder<ProcessingStages> {

    private java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> stageDetails;
    private long stageEndTimestamp;
    private java.lang.String stageId;
    private java.lang.String stageName;
    private long stageStartTimestamp;
    private com.opentext.bn.converters.avro.entity.ErrorInfo errorInfo;
    private com.opentext.bn.converters.avro.entity.ErrorInfo.Builder errorInfoBuilder;
    private java.lang.String contentId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.ProcessingStages.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.stageDetails)) {
        this.stageDetails = data().deepCopy(fields()[0].schema(), other.stageDetails);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stageEndTimestamp)) {
        this.stageEndTimestamp = data().deepCopy(fields()[1].schema(), other.stageEndTimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stageId)) {
        this.stageId = data().deepCopy(fields()[2].schema(), other.stageId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stageName)) {
        this.stageName = data().deepCopy(fields()[3].schema(), other.stageName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stageStartTimestamp)) {
        this.stageStartTimestamp = data().deepCopy(fields()[4].schema(), other.stageStartTimestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.errorInfo)) {
        this.errorInfo = data().deepCopy(fields()[5].schema(), other.errorInfo);
        fieldSetFlags()[5] = true;
      }
      if (other.hasErrorInfoBuilder()) {
        this.errorInfoBuilder = com.opentext.bn.converters.avro.entity.ErrorInfo.newBuilder(other.getErrorInfoBuilder());
      }
      if (isValidValue(fields()[6], other.contentId)) {
        this.contentId = data().deepCopy(fields()[6].schema(), other.contentId);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ProcessingStages instance
     * @param other The existing instance to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.ProcessingStages other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.stageDetails)) {
        this.stageDetails = data().deepCopy(fields()[0].schema(), other.stageDetails);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stageEndTimestamp)) {
        this.stageEndTimestamp = data().deepCopy(fields()[1].schema(), other.stageEndTimestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stageId)) {
        this.stageId = data().deepCopy(fields()[2].schema(), other.stageId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stageName)) {
        this.stageName = data().deepCopy(fields()[3].schema(), other.stageName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stageStartTimestamp)) {
        this.stageStartTimestamp = data().deepCopy(fields()[4].schema(), other.stageStartTimestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.errorInfo)) {
        this.errorInfo = data().deepCopy(fields()[5].schema(), other.errorInfo);
        fieldSetFlags()[5] = true;
      }
      this.errorInfoBuilder = null;
      if (isValidValue(fields()[6], other.contentId)) {
        this.contentId = data().deepCopy(fields()[6].schema(), other.contentId);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'stageDetails' field.
      * @return The value.
      */
    public java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> getStageDetails() {
      return stageDetails;
    }

    /**
      * Sets the value of the 'stageDetails' field.
      * @param value The value of 'stageDetails'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder setStageDetails(java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam> value) {
      validate(fields()[0], value);
      this.stageDetails = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'stageDetails' field has been set.
      * @return True if the 'stageDetails' field has been set, false otherwise.
      */
    public boolean hasStageDetails() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'stageDetails' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder clearStageDetails() {
      stageDetails = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageEndTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getStageEndTimestamp() {
      return stageEndTimestamp;
    }

    /**
      * Sets the value of the 'stageEndTimestamp' field.
      * @param value The value of 'stageEndTimestamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder setStageEndTimestamp(long value) {
      validate(fields()[1], value);
      this.stageEndTimestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'stageEndTimestamp' field has been set.
      * @return True if the 'stageEndTimestamp' field has been set, false otherwise.
      */
    public boolean hasStageEndTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'stageEndTimestamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder clearStageEndTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageId' field.
      * @return The value.
      */
    public java.lang.String getStageId() {
      return stageId;
    }

    /**
      * Sets the value of the 'stageId' field.
      * @param value The value of 'stageId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder setStageId(java.lang.String value) {
      validate(fields()[2], value);
      this.stageId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'stageId' field has been set.
      * @return True if the 'stageId' field has been set, false otherwise.
      */
    public boolean hasStageId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'stageId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder clearStageId() {
      stageId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageName' field.
      * @return The value.
      */
    public java.lang.String getStageName() {
      return stageName;
    }

    /**
      * Sets the value of the 'stageName' field.
      * @param value The value of 'stageName'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder setStageName(java.lang.String value) {
      validate(fields()[3], value);
      this.stageName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'stageName' field has been set.
      * @return True if the 'stageName' field has been set, false otherwise.
      */
    public boolean hasStageName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'stageName' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder clearStageName() {
      stageName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'stageStartTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getStageStartTimestamp() {
      return stageStartTimestamp;
    }

    /**
      * Sets the value of the 'stageStartTimestamp' field.
      * @param value The value of 'stageStartTimestamp'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder setStageStartTimestamp(long value) {
      validate(fields()[4], value);
      this.stageStartTimestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'stageStartTimestamp' field has been set.
      * @return True if the 'stageStartTimestamp' field has been set, false otherwise.
      */
    public boolean hasStageStartTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'stageStartTimestamp' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder clearStageStartTimestamp() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorInfo' field.
      * @return The value.
      */
    public com.opentext.bn.converters.avro.entity.ErrorInfo getErrorInfo() {
      return errorInfo;
    }

    /**
      * Sets the value of the 'errorInfo' field.
      * @param value The value of 'errorInfo'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder setErrorInfo(com.opentext.bn.converters.avro.entity.ErrorInfo value) {
      validate(fields()[5], value);
      this.errorInfoBuilder = null;
      this.errorInfo = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'errorInfo' field has been set.
      * @return True if the 'errorInfo' field has been set, false otherwise.
      */
    public boolean hasErrorInfo() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'errorInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.ErrorInfo.Builder getErrorInfoBuilder() {
      if (errorInfoBuilder == null) {
        if (hasErrorInfo()) {
          setErrorInfoBuilder(com.opentext.bn.converters.avro.entity.ErrorInfo.newBuilder(errorInfo));
        } else {
          setErrorInfoBuilder(com.opentext.bn.converters.avro.entity.ErrorInfo.newBuilder());
        }
      }
      return errorInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'errorInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder setErrorInfoBuilder(com.opentext.bn.converters.avro.entity.ErrorInfo.Builder value) {
      clearErrorInfo();
      errorInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'errorInfo' field has an active Builder instance
     * @return True if the 'errorInfo' field has an active Builder instance
     */
    public boolean hasErrorInfoBuilder() {
      return errorInfoBuilder != null;
    }

    /**
      * Clears the value of the 'errorInfo' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder clearErrorInfo() {
      errorInfo = null;
      errorInfoBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'contentId' field.
      * @return The value.
      */
    public java.lang.String getContentId() {
      return contentId;
    }

    /**
      * Sets the value of the 'contentId' field.
      * @param value The value of 'contentId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder setContentId(java.lang.String value) {
      validate(fields()[6], value);
      this.contentId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'contentId' field has been set.
      * @return True if the 'contentId' field has been set, false otherwise.
      */
    public boolean hasContentId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'contentId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.ProcessingStages.Builder clearContentId() {
      contentId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProcessingStages build() {
      try {
        ProcessingStages record = new ProcessingStages();
        record.stageDetails = fieldSetFlags()[0] ? this.stageDetails : (java.util.List<com.opentext.bn.converters.avro.entity.ProcessingParam>) defaultValue(fields()[0]);
        record.stageEndTimestamp = fieldSetFlags()[1] ? this.stageEndTimestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.stageId = fieldSetFlags()[2] ? this.stageId : (java.lang.String) defaultValue(fields()[2]);
        record.stageName = fieldSetFlags()[3] ? this.stageName : (java.lang.String) defaultValue(fields()[3]);
        record.stageStartTimestamp = fieldSetFlags()[4] ? this.stageStartTimestamp : (java.lang.Long) defaultValue(fields()[4]);
        if (errorInfoBuilder != null) {
          record.errorInfo = this.errorInfoBuilder.build();
        } else {
          record.errorInfo = fieldSetFlags()[5] ? this.errorInfo : (com.opentext.bn.converters.avro.entity.ErrorInfo) defaultValue(fields()[5]);
        }
        record.contentId = fieldSetFlags()[6] ? this.contentId : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProcessingStages>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProcessingStages>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProcessingStages>
    READER$ = (org.apache.avro.io.DatumReader<ProcessingStages>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
