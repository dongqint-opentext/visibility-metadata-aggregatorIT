/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.opentext.bn.converters.avro.entity;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DocumentEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6914522633736003919L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DocumentEvent\",\"namespace\":\"com.opentext.bn.converters.avro.entity\",\"fields\":[{\"name\":\"containingParentId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"containingParentType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"containingParentLevel\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"controlNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"controlNumberLevel1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"controlNumberLevel2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"contentKeys\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ContentKey\",\"fields\":[{\"name\":\"keyName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"keyValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"keyType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}],\"default\":null},{\"name\":\"documentId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"documentStandard\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"documentStandardVersion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"documentType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"envelopeVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"introspectionSource\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"processId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"receiverAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"senderAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sentDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sentTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"taskId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"transactionId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"fileInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PayloadRef\",\"fields\":[{\"name\":\"payloadId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"payloadType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DocumentEvent> ENCODER =
      new BinaryMessageEncoder<DocumentEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DocumentEvent> DECODER =
      new BinaryMessageDecoder<DocumentEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<DocumentEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<DocumentEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DocumentEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this DocumentEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a DocumentEvent from a ByteBuffer. */
  public static DocumentEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String containingParentId;
   private java.lang.String containingParentType;
   private java.lang.String containingParentLevel;
   private java.lang.String controlNumber;
   private java.lang.String controlNumberLevel1;
   private java.lang.String controlNumberLevel2;
   private java.util.List<com.opentext.bn.converters.avro.entity.ContentKey> contentKeys;
   private java.lang.String documentId;
   private java.lang.String documentStandard;
   private java.lang.String documentStandardVersion;
   private java.lang.String documentType;
   private java.lang.String envelopeVersion;
   private java.lang.String introspectionSource;
   private java.lang.String processId;
   private java.lang.String receiverAddress;
   private java.lang.String senderAddress;
   private java.lang.String sentDate;
   private java.lang.String sentTime;
   private java.lang.String taskId;
   private java.lang.String transactionId;
   private com.opentext.bn.converters.avro.entity.PayloadRef fileInfo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DocumentEvent() {}

  /**
   * All-args constructor.
   * @param containingParentId The new value for containingParentId
   * @param containingParentType The new value for containingParentType
   * @param containingParentLevel The new value for containingParentLevel
   * @param controlNumber The new value for controlNumber
   * @param controlNumberLevel1 The new value for controlNumberLevel1
   * @param controlNumberLevel2 The new value for controlNumberLevel2
   * @param contentKeys The new value for contentKeys
   * @param documentId The new value for documentId
   * @param documentStandard The new value for documentStandard
   * @param documentStandardVersion The new value for documentStandardVersion
   * @param documentType The new value for documentType
   * @param envelopeVersion The new value for envelopeVersion
   * @param introspectionSource The new value for introspectionSource
   * @param processId The new value for processId
   * @param receiverAddress The new value for receiverAddress
   * @param senderAddress The new value for senderAddress
   * @param sentDate The new value for sentDate
   * @param sentTime The new value for sentTime
   * @param taskId The new value for taskId
   * @param transactionId The new value for transactionId
   * @param fileInfo The new value for fileInfo
   */
  public DocumentEvent(java.lang.String containingParentId, java.lang.String containingParentType, java.lang.String containingParentLevel, java.lang.String controlNumber, java.lang.String controlNumberLevel1, java.lang.String controlNumberLevel2, java.util.List<com.opentext.bn.converters.avro.entity.ContentKey> contentKeys, java.lang.String documentId, java.lang.String documentStandard, java.lang.String documentStandardVersion, java.lang.String documentType, java.lang.String envelopeVersion, java.lang.String introspectionSource, java.lang.String processId, java.lang.String receiverAddress, java.lang.String senderAddress, java.lang.String sentDate, java.lang.String sentTime, java.lang.String taskId, java.lang.String transactionId, com.opentext.bn.converters.avro.entity.PayloadRef fileInfo) {
    this.containingParentId = containingParentId;
    this.containingParentType = containingParentType;
    this.containingParentLevel = containingParentLevel;
    this.controlNumber = controlNumber;
    this.controlNumberLevel1 = controlNumberLevel1;
    this.controlNumberLevel2 = controlNumberLevel2;
    this.contentKeys = contentKeys;
    this.documentId = documentId;
    this.documentStandard = documentStandard;
    this.documentStandardVersion = documentStandardVersion;
    this.documentType = documentType;
    this.envelopeVersion = envelopeVersion;
    this.introspectionSource = introspectionSource;
    this.processId = processId;
    this.receiverAddress = receiverAddress;
    this.senderAddress = senderAddress;
    this.sentDate = sentDate;
    this.sentTime = sentTime;
    this.taskId = taskId;
    this.transactionId = transactionId;
    this.fileInfo = fileInfo;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return containingParentId;
    case 1: return containingParentType;
    case 2: return containingParentLevel;
    case 3: return controlNumber;
    case 4: return controlNumberLevel1;
    case 5: return controlNumberLevel2;
    case 6: return contentKeys;
    case 7: return documentId;
    case 8: return documentStandard;
    case 9: return documentStandardVersion;
    case 10: return documentType;
    case 11: return envelopeVersion;
    case 12: return introspectionSource;
    case 13: return processId;
    case 14: return receiverAddress;
    case 15: return senderAddress;
    case 16: return sentDate;
    case 17: return sentTime;
    case 18: return taskId;
    case 19: return transactionId;
    case 20: return fileInfo;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: containingParentId = (java.lang.String)value$; break;
    case 1: containingParentType = (java.lang.String)value$; break;
    case 2: containingParentLevel = (java.lang.String)value$; break;
    case 3: controlNumber = (java.lang.String)value$; break;
    case 4: controlNumberLevel1 = (java.lang.String)value$; break;
    case 5: controlNumberLevel2 = (java.lang.String)value$; break;
    case 6: contentKeys = (java.util.List<com.opentext.bn.converters.avro.entity.ContentKey>)value$; break;
    case 7: documentId = (java.lang.String)value$; break;
    case 8: documentStandard = (java.lang.String)value$; break;
    case 9: documentStandardVersion = (java.lang.String)value$; break;
    case 10: documentType = (java.lang.String)value$; break;
    case 11: envelopeVersion = (java.lang.String)value$; break;
    case 12: introspectionSource = (java.lang.String)value$; break;
    case 13: processId = (java.lang.String)value$; break;
    case 14: receiverAddress = (java.lang.String)value$; break;
    case 15: senderAddress = (java.lang.String)value$; break;
    case 16: sentDate = (java.lang.String)value$; break;
    case 17: sentTime = (java.lang.String)value$; break;
    case 18: taskId = (java.lang.String)value$; break;
    case 19: transactionId = (java.lang.String)value$; break;
    case 20: fileInfo = (com.opentext.bn.converters.avro.entity.PayloadRef)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'containingParentId' field.
   * @return The value of the 'containingParentId' field.
   */
  public java.lang.String getContainingParentId() {
    return containingParentId;
  }


  /**
   * Gets the value of the 'containingParentType' field.
   * @return The value of the 'containingParentType' field.
   */
  public java.lang.String getContainingParentType() {
    return containingParentType;
  }


  /**
   * Gets the value of the 'containingParentLevel' field.
   * @return The value of the 'containingParentLevel' field.
   */
  public java.lang.String getContainingParentLevel() {
    return containingParentLevel;
  }


  /**
   * Gets the value of the 'controlNumber' field.
   * @return The value of the 'controlNumber' field.
   */
  public java.lang.String getControlNumber() {
    return controlNumber;
  }


  /**
   * Gets the value of the 'controlNumberLevel1' field.
   * @return The value of the 'controlNumberLevel1' field.
   */
  public java.lang.String getControlNumberLevel1() {
    return controlNumberLevel1;
  }


  /**
   * Gets the value of the 'controlNumberLevel2' field.
   * @return The value of the 'controlNumberLevel2' field.
   */
  public java.lang.String getControlNumberLevel2() {
    return controlNumberLevel2;
  }


  /**
   * Gets the value of the 'contentKeys' field.
   * @return The value of the 'contentKeys' field.
   */
  public java.util.List<com.opentext.bn.converters.avro.entity.ContentKey> getContentKeys() {
    return contentKeys;
  }


  /**
   * Gets the value of the 'documentId' field.
   * @return The value of the 'documentId' field.
   */
  public java.lang.String getDocumentId() {
    return documentId;
  }


  /**
   * Gets the value of the 'documentStandard' field.
   * @return The value of the 'documentStandard' field.
   */
  public java.lang.String getDocumentStandard() {
    return documentStandard;
  }


  /**
   * Gets the value of the 'documentStandardVersion' field.
   * @return The value of the 'documentStandardVersion' field.
   */
  public java.lang.String getDocumentStandardVersion() {
    return documentStandardVersion;
  }


  /**
   * Gets the value of the 'documentType' field.
   * @return The value of the 'documentType' field.
   */
  public java.lang.String getDocumentType() {
    return documentType;
  }


  /**
   * Gets the value of the 'envelopeVersion' field.
   * @return The value of the 'envelopeVersion' field.
   */
  public java.lang.String getEnvelopeVersion() {
    return envelopeVersion;
  }


  /**
   * Gets the value of the 'introspectionSource' field.
   * @return The value of the 'introspectionSource' field.
   */
  public java.lang.String getIntrospectionSource() {
    return introspectionSource;
  }


  /**
   * Gets the value of the 'processId' field.
   * @return The value of the 'processId' field.
   */
  public java.lang.String getProcessId() {
    return processId;
  }


  /**
   * Gets the value of the 'receiverAddress' field.
   * @return The value of the 'receiverAddress' field.
   */
  public java.lang.String getReceiverAddress() {
    return receiverAddress;
  }


  /**
   * Gets the value of the 'senderAddress' field.
   * @return The value of the 'senderAddress' field.
   */
  public java.lang.String getSenderAddress() {
    return senderAddress;
  }


  /**
   * Gets the value of the 'sentDate' field.
   * @return The value of the 'sentDate' field.
   */
  public java.lang.String getSentDate() {
    return sentDate;
  }


  /**
   * Gets the value of the 'sentTime' field.
   * @return The value of the 'sentTime' field.
   */
  public java.lang.String getSentTime() {
    return sentTime;
  }


  /**
   * Gets the value of the 'taskId' field.
   * @return The value of the 'taskId' field.
   */
  public java.lang.String getTaskId() {
    return taskId;
  }


  /**
   * Gets the value of the 'transactionId' field.
   * @return The value of the 'transactionId' field.
   */
  public java.lang.String getTransactionId() {
    return transactionId;
  }


  /**
   * Gets the value of the 'fileInfo' field.
   * @return The value of the 'fileInfo' field.
   */
  public com.opentext.bn.converters.avro.entity.PayloadRef getFileInfo() {
    return fileInfo;
  }


  /**
   * Creates a new DocumentEvent RecordBuilder.
   * @return A new DocumentEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.DocumentEvent.Builder newBuilder() {
    return new com.opentext.bn.converters.avro.entity.DocumentEvent.Builder();
  }

  /**
   * Creates a new DocumentEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DocumentEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.DocumentEvent.Builder newBuilder(com.opentext.bn.converters.avro.entity.DocumentEvent.Builder other) {
    return new com.opentext.bn.converters.avro.entity.DocumentEvent.Builder(other);
  }

  /**
   * Creates a new DocumentEvent RecordBuilder by copying an existing DocumentEvent instance.
   * @param other The existing instance to copy.
   * @return A new DocumentEvent RecordBuilder
   */
  public static com.opentext.bn.converters.avro.entity.DocumentEvent.Builder newBuilder(com.opentext.bn.converters.avro.entity.DocumentEvent other) {
    return new com.opentext.bn.converters.avro.entity.DocumentEvent.Builder(other);
  }

  /**
   * RecordBuilder for DocumentEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DocumentEvent>
    implements org.apache.avro.data.RecordBuilder<DocumentEvent> {

    private java.lang.String containingParentId;
    private java.lang.String containingParentType;
    private java.lang.String containingParentLevel;
    private java.lang.String controlNumber;
    private java.lang.String controlNumberLevel1;
    private java.lang.String controlNumberLevel2;
    private java.util.List<com.opentext.bn.converters.avro.entity.ContentKey> contentKeys;
    private java.lang.String documentId;
    private java.lang.String documentStandard;
    private java.lang.String documentStandardVersion;
    private java.lang.String documentType;
    private java.lang.String envelopeVersion;
    private java.lang.String introspectionSource;
    private java.lang.String processId;
    private java.lang.String receiverAddress;
    private java.lang.String senderAddress;
    private java.lang.String sentDate;
    private java.lang.String sentTime;
    private java.lang.String taskId;
    private java.lang.String transactionId;
    private com.opentext.bn.converters.avro.entity.PayloadRef fileInfo;
    private com.opentext.bn.converters.avro.entity.PayloadRef.Builder fileInfoBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.DocumentEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.containingParentId)) {
        this.containingParentId = data().deepCopy(fields()[0].schema(), other.containingParentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.containingParentType)) {
        this.containingParentType = data().deepCopy(fields()[1].schema(), other.containingParentType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.containingParentLevel)) {
        this.containingParentLevel = data().deepCopy(fields()[2].schema(), other.containingParentLevel);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.controlNumber)) {
        this.controlNumber = data().deepCopy(fields()[3].schema(), other.controlNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.controlNumberLevel1)) {
        this.controlNumberLevel1 = data().deepCopy(fields()[4].schema(), other.controlNumberLevel1);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.controlNumberLevel2)) {
        this.controlNumberLevel2 = data().deepCopy(fields()[5].schema(), other.controlNumberLevel2);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.contentKeys)) {
        this.contentKeys = data().deepCopy(fields()[6].schema(), other.contentKeys);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.documentId)) {
        this.documentId = data().deepCopy(fields()[7].schema(), other.documentId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.documentStandard)) {
        this.documentStandard = data().deepCopy(fields()[8].schema(), other.documentStandard);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.documentStandardVersion)) {
        this.documentStandardVersion = data().deepCopy(fields()[9].schema(), other.documentStandardVersion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.documentType)) {
        this.documentType = data().deepCopy(fields()[10].schema(), other.documentType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.envelopeVersion)) {
        this.envelopeVersion = data().deepCopy(fields()[11].schema(), other.envelopeVersion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.introspectionSource)) {
        this.introspectionSource = data().deepCopy(fields()[12].schema(), other.introspectionSource);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.processId)) {
        this.processId = data().deepCopy(fields()[13].schema(), other.processId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.receiverAddress)) {
        this.receiverAddress = data().deepCopy(fields()[14].schema(), other.receiverAddress);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.senderAddress)) {
        this.senderAddress = data().deepCopy(fields()[15].schema(), other.senderAddress);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.sentDate)) {
        this.sentDate = data().deepCopy(fields()[16].schema(), other.sentDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.sentTime)) {
        this.sentTime = data().deepCopy(fields()[17].schema(), other.sentTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.taskId)) {
        this.taskId = data().deepCopy(fields()[18].schema(), other.taskId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[19].schema(), other.transactionId);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.fileInfo)) {
        this.fileInfo = data().deepCopy(fields()[20].schema(), other.fileInfo);
        fieldSetFlags()[20] = true;
      }
      if (other.hasFileInfoBuilder()) {
        this.fileInfoBuilder = com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder(other.getFileInfoBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing DocumentEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.opentext.bn.converters.avro.entity.DocumentEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.containingParentId)) {
        this.containingParentId = data().deepCopy(fields()[0].schema(), other.containingParentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.containingParentType)) {
        this.containingParentType = data().deepCopy(fields()[1].schema(), other.containingParentType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.containingParentLevel)) {
        this.containingParentLevel = data().deepCopy(fields()[2].schema(), other.containingParentLevel);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.controlNumber)) {
        this.controlNumber = data().deepCopy(fields()[3].schema(), other.controlNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.controlNumberLevel1)) {
        this.controlNumberLevel1 = data().deepCopy(fields()[4].schema(), other.controlNumberLevel1);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.controlNumberLevel2)) {
        this.controlNumberLevel2 = data().deepCopy(fields()[5].schema(), other.controlNumberLevel2);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.contentKeys)) {
        this.contentKeys = data().deepCopy(fields()[6].schema(), other.contentKeys);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.documentId)) {
        this.documentId = data().deepCopy(fields()[7].schema(), other.documentId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.documentStandard)) {
        this.documentStandard = data().deepCopy(fields()[8].schema(), other.documentStandard);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.documentStandardVersion)) {
        this.documentStandardVersion = data().deepCopy(fields()[9].schema(), other.documentStandardVersion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.documentType)) {
        this.documentType = data().deepCopy(fields()[10].schema(), other.documentType);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.envelopeVersion)) {
        this.envelopeVersion = data().deepCopy(fields()[11].schema(), other.envelopeVersion);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.introspectionSource)) {
        this.introspectionSource = data().deepCopy(fields()[12].schema(), other.introspectionSource);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.processId)) {
        this.processId = data().deepCopy(fields()[13].schema(), other.processId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.receiverAddress)) {
        this.receiverAddress = data().deepCopy(fields()[14].schema(), other.receiverAddress);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.senderAddress)) {
        this.senderAddress = data().deepCopy(fields()[15].schema(), other.senderAddress);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.sentDate)) {
        this.sentDate = data().deepCopy(fields()[16].schema(), other.sentDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.sentTime)) {
        this.sentTime = data().deepCopy(fields()[17].schema(), other.sentTime);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.taskId)) {
        this.taskId = data().deepCopy(fields()[18].schema(), other.taskId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[19].schema(), other.transactionId);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.fileInfo)) {
        this.fileInfo = data().deepCopy(fields()[20].schema(), other.fileInfo);
        fieldSetFlags()[20] = true;
      }
      this.fileInfoBuilder = null;
    }

    /**
      * Gets the value of the 'containingParentId' field.
      * @return The value.
      */
    public java.lang.String getContainingParentId() {
      return containingParentId;
    }

    /**
      * Sets the value of the 'containingParentId' field.
      * @param value The value of 'containingParentId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setContainingParentId(java.lang.String value) {
      validate(fields()[0], value);
      this.containingParentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'containingParentId' field has been set.
      * @return True if the 'containingParentId' field has been set, false otherwise.
      */
    public boolean hasContainingParentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'containingParentId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearContainingParentId() {
      containingParentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'containingParentType' field.
      * @return The value.
      */
    public java.lang.String getContainingParentType() {
      return containingParentType;
    }

    /**
      * Sets the value of the 'containingParentType' field.
      * @param value The value of 'containingParentType'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setContainingParentType(java.lang.String value) {
      validate(fields()[1], value);
      this.containingParentType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'containingParentType' field has been set.
      * @return True if the 'containingParentType' field has been set, false otherwise.
      */
    public boolean hasContainingParentType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'containingParentType' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearContainingParentType() {
      containingParentType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'containingParentLevel' field.
      * @return The value.
      */
    public java.lang.String getContainingParentLevel() {
      return containingParentLevel;
    }

    /**
      * Sets the value of the 'containingParentLevel' field.
      * @param value The value of 'containingParentLevel'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setContainingParentLevel(java.lang.String value) {
      validate(fields()[2], value);
      this.containingParentLevel = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'containingParentLevel' field has been set.
      * @return True if the 'containingParentLevel' field has been set, false otherwise.
      */
    public boolean hasContainingParentLevel() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'containingParentLevel' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearContainingParentLevel() {
      containingParentLevel = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'controlNumber' field.
      * @return The value.
      */
    public java.lang.String getControlNumber() {
      return controlNumber;
    }

    /**
      * Sets the value of the 'controlNumber' field.
      * @param value The value of 'controlNumber'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setControlNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.controlNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'controlNumber' field has been set.
      * @return True if the 'controlNumber' field has been set, false otherwise.
      */
    public boolean hasControlNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'controlNumber' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearControlNumber() {
      controlNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'controlNumberLevel1' field.
      * @return The value.
      */
    public java.lang.String getControlNumberLevel1() {
      return controlNumberLevel1;
    }

    /**
      * Sets the value of the 'controlNumberLevel1' field.
      * @param value The value of 'controlNumberLevel1'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setControlNumberLevel1(java.lang.String value) {
      validate(fields()[4], value);
      this.controlNumberLevel1 = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'controlNumberLevel1' field has been set.
      * @return True if the 'controlNumberLevel1' field has been set, false otherwise.
      */
    public boolean hasControlNumberLevel1() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'controlNumberLevel1' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearControlNumberLevel1() {
      controlNumberLevel1 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'controlNumberLevel2' field.
      * @return The value.
      */
    public java.lang.String getControlNumberLevel2() {
      return controlNumberLevel2;
    }

    /**
      * Sets the value of the 'controlNumberLevel2' field.
      * @param value The value of 'controlNumberLevel2'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setControlNumberLevel2(java.lang.String value) {
      validate(fields()[5], value);
      this.controlNumberLevel2 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'controlNumberLevel2' field has been set.
      * @return True if the 'controlNumberLevel2' field has been set, false otherwise.
      */
    public boolean hasControlNumberLevel2() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'controlNumberLevel2' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearControlNumberLevel2() {
      controlNumberLevel2 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'contentKeys' field.
      * @return The value.
      */
    public java.util.List<com.opentext.bn.converters.avro.entity.ContentKey> getContentKeys() {
      return contentKeys;
    }

    /**
      * Sets the value of the 'contentKeys' field.
      * @param value The value of 'contentKeys'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setContentKeys(java.util.List<com.opentext.bn.converters.avro.entity.ContentKey> value) {
      validate(fields()[6], value);
      this.contentKeys = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'contentKeys' field has been set.
      * @return True if the 'contentKeys' field has been set, false otherwise.
      */
    public boolean hasContentKeys() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'contentKeys' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearContentKeys() {
      contentKeys = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentId' field.
      * @return The value.
      */
    public java.lang.String getDocumentId() {
      return documentId;
    }

    /**
      * Sets the value of the 'documentId' field.
      * @param value The value of 'documentId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setDocumentId(java.lang.String value) {
      validate(fields()[7], value);
      this.documentId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'documentId' field has been set.
      * @return True if the 'documentId' field has been set, false otherwise.
      */
    public boolean hasDocumentId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'documentId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearDocumentId() {
      documentId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentStandard' field.
      * @return The value.
      */
    public java.lang.String getDocumentStandard() {
      return documentStandard;
    }

    /**
      * Sets the value of the 'documentStandard' field.
      * @param value The value of 'documentStandard'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setDocumentStandard(java.lang.String value) {
      validate(fields()[8], value);
      this.documentStandard = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'documentStandard' field has been set.
      * @return True if the 'documentStandard' field has been set, false otherwise.
      */
    public boolean hasDocumentStandard() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'documentStandard' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearDocumentStandard() {
      documentStandard = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentStandardVersion' field.
      * @return The value.
      */
    public java.lang.String getDocumentStandardVersion() {
      return documentStandardVersion;
    }

    /**
      * Sets the value of the 'documentStandardVersion' field.
      * @param value The value of 'documentStandardVersion'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setDocumentStandardVersion(java.lang.String value) {
      validate(fields()[9], value);
      this.documentStandardVersion = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'documentStandardVersion' field has been set.
      * @return True if the 'documentStandardVersion' field has been set, false otherwise.
      */
    public boolean hasDocumentStandardVersion() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'documentStandardVersion' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearDocumentStandardVersion() {
      documentStandardVersion = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentType' field.
      * @return The value.
      */
    public java.lang.String getDocumentType() {
      return documentType;
    }

    /**
      * Sets the value of the 'documentType' field.
      * @param value The value of 'documentType'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setDocumentType(java.lang.String value) {
      validate(fields()[10], value);
      this.documentType = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'documentType' field has been set.
      * @return True if the 'documentType' field has been set, false otherwise.
      */
    public boolean hasDocumentType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'documentType' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearDocumentType() {
      documentType = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'envelopeVersion' field.
      * @return The value.
      */
    public java.lang.String getEnvelopeVersion() {
      return envelopeVersion;
    }

    /**
      * Sets the value of the 'envelopeVersion' field.
      * @param value The value of 'envelopeVersion'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setEnvelopeVersion(java.lang.String value) {
      validate(fields()[11], value);
      this.envelopeVersion = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'envelopeVersion' field has been set.
      * @return True if the 'envelopeVersion' field has been set, false otherwise.
      */
    public boolean hasEnvelopeVersion() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'envelopeVersion' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearEnvelopeVersion() {
      envelopeVersion = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'introspectionSource' field.
      * @return The value.
      */
    public java.lang.String getIntrospectionSource() {
      return introspectionSource;
    }

    /**
      * Sets the value of the 'introspectionSource' field.
      * @param value The value of 'introspectionSource'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setIntrospectionSource(java.lang.String value) {
      validate(fields()[12], value);
      this.introspectionSource = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'introspectionSource' field has been set.
      * @return True if the 'introspectionSource' field has been set, false otherwise.
      */
    public boolean hasIntrospectionSource() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'introspectionSource' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearIntrospectionSource() {
      introspectionSource = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'processId' field.
      * @return The value.
      */
    public java.lang.String getProcessId() {
      return processId;
    }

    /**
      * Sets the value of the 'processId' field.
      * @param value The value of 'processId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setProcessId(java.lang.String value) {
      validate(fields()[13], value);
      this.processId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'processId' field has been set.
      * @return True if the 'processId' field has been set, false otherwise.
      */
    public boolean hasProcessId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'processId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearProcessId() {
      processId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiverAddress' field.
      * @return The value.
      */
    public java.lang.String getReceiverAddress() {
      return receiverAddress;
    }

    /**
      * Sets the value of the 'receiverAddress' field.
      * @param value The value of 'receiverAddress'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setReceiverAddress(java.lang.String value) {
      validate(fields()[14], value);
      this.receiverAddress = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'receiverAddress' field has been set.
      * @return True if the 'receiverAddress' field has been set, false otherwise.
      */
    public boolean hasReceiverAddress() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'receiverAddress' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearReceiverAddress() {
      receiverAddress = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'senderAddress' field.
      * @return The value.
      */
    public java.lang.String getSenderAddress() {
      return senderAddress;
    }

    /**
      * Sets the value of the 'senderAddress' field.
      * @param value The value of 'senderAddress'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setSenderAddress(java.lang.String value) {
      validate(fields()[15], value);
      this.senderAddress = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'senderAddress' field has been set.
      * @return True if the 'senderAddress' field has been set, false otherwise.
      */
    public boolean hasSenderAddress() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'senderAddress' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearSenderAddress() {
      senderAddress = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'sentDate' field.
      * @return The value.
      */
    public java.lang.String getSentDate() {
      return sentDate;
    }

    /**
      * Sets the value of the 'sentDate' field.
      * @param value The value of 'sentDate'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setSentDate(java.lang.String value) {
      validate(fields()[16], value);
      this.sentDate = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'sentDate' field has been set.
      * @return True if the 'sentDate' field has been set, false otherwise.
      */
    public boolean hasSentDate() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'sentDate' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearSentDate() {
      sentDate = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'sentTime' field.
      * @return The value.
      */
    public java.lang.String getSentTime() {
      return sentTime;
    }

    /**
      * Sets the value of the 'sentTime' field.
      * @param value The value of 'sentTime'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setSentTime(java.lang.String value) {
      validate(fields()[17], value);
      this.sentTime = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'sentTime' field has been set.
      * @return True if the 'sentTime' field has been set, false otherwise.
      */
    public boolean hasSentTime() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'sentTime' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearSentTime() {
      sentTime = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'taskId' field.
      * @return The value.
      */
    public java.lang.String getTaskId() {
      return taskId;
    }

    /**
      * Sets the value of the 'taskId' field.
      * @param value The value of 'taskId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setTaskId(java.lang.String value) {
      validate(fields()[18], value);
      this.taskId = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'taskId' field has been set.
      * @return True if the 'taskId' field has been set, false otherwise.
      */
    public boolean hasTaskId() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'taskId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearTaskId() {
      taskId = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionId' field.
      * @return The value.
      */
    public java.lang.String getTransactionId() {
      return transactionId;
    }

    /**
      * Sets the value of the 'transactionId' field.
      * @param value The value of 'transactionId'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setTransactionId(java.lang.String value) {
      validate(fields()[19], value);
      this.transactionId = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionId' field has been set.
      * @return True if the 'transactionId' field has been set, false otherwise.
      */
    public boolean hasTransactionId() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'transactionId' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearTransactionId() {
      transactionId = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'fileInfo' field.
      * @return The value.
      */
    public com.opentext.bn.converters.avro.entity.PayloadRef getFileInfo() {
      return fileInfo;
    }

    /**
      * Sets the value of the 'fileInfo' field.
      * @param value The value of 'fileInfo'.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setFileInfo(com.opentext.bn.converters.avro.entity.PayloadRef value) {
      validate(fields()[20], value);
      this.fileInfoBuilder = null;
      this.fileInfo = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'fileInfo' field has been set.
      * @return True if the 'fileInfo' field has been set, false otherwise.
      */
    public boolean hasFileInfo() {
      return fieldSetFlags()[20];
    }

    /**
     * Gets the Builder instance for the 'fileInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.PayloadRef.Builder getFileInfoBuilder() {
      if (fileInfoBuilder == null) {
        if (hasFileInfo()) {
          setFileInfoBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder(fileInfo));
        } else {
          setFileInfoBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.newBuilder());
        }
      }
      return fileInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'fileInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder setFileInfoBuilder(com.opentext.bn.converters.avro.entity.PayloadRef.Builder value) {
      clearFileInfo();
      fileInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fileInfo' field has an active Builder instance
     * @return True if the 'fileInfo' field has an active Builder instance
     */
    public boolean hasFileInfoBuilder() {
      return fileInfoBuilder != null;
    }

    /**
      * Clears the value of the 'fileInfo' field.
      * @return This builder.
      */
    public com.opentext.bn.converters.avro.entity.DocumentEvent.Builder clearFileInfo() {
      fileInfo = null;
      fileInfoBuilder = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DocumentEvent build() {
      try {
        DocumentEvent record = new DocumentEvent();
        record.containingParentId = fieldSetFlags()[0] ? this.containingParentId : (java.lang.String) defaultValue(fields()[0]);
        record.containingParentType = fieldSetFlags()[1] ? this.containingParentType : (java.lang.String) defaultValue(fields()[1]);
        record.containingParentLevel = fieldSetFlags()[2] ? this.containingParentLevel : (java.lang.String) defaultValue(fields()[2]);
        record.controlNumber = fieldSetFlags()[3] ? this.controlNumber : (java.lang.String) defaultValue(fields()[3]);
        record.controlNumberLevel1 = fieldSetFlags()[4] ? this.controlNumberLevel1 : (java.lang.String) defaultValue(fields()[4]);
        record.controlNumberLevel2 = fieldSetFlags()[5] ? this.controlNumberLevel2 : (java.lang.String) defaultValue(fields()[5]);
        record.contentKeys = fieldSetFlags()[6] ? this.contentKeys : (java.util.List<com.opentext.bn.converters.avro.entity.ContentKey>) defaultValue(fields()[6]);
        record.documentId = fieldSetFlags()[7] ? this.documentId : (java.lang.String) defaultValue(fields()[7]);
        record.documentStandard = fieldSetFlags()[8] ? this.documentStandard : (java.lang.String) defaultValue(fields()[8]);
        record.documentStandardVersion = fieldSetFlags()[9] ? this.documentStandardVersion : (java.lang.String) defaultValue(fields()[9]);
        record.documentType = fieldSetFlags()[10] ? this.documentType : (java.lang.String) defaultValue(fields()[10]);
        record.envelopeVersion = fieldSetFlags()[11] ? this.envelopeVersion : (java.lang.String) defaultValue(fields()[11]);
        record.introspectionSource = fieldSetFlags()[12] ? this.introspectionSource : (java.lang.String) defaultValue(fields()[12]);
        record.processId = fieldSetFlags()[13] ? this.processId : (java.lang.String) defaultValue(fields()[13]);
        record.receiverAddress = fieldSetFlags()[14] ? this.receiverAddress : (java.lang.String) defaultValue(fields()[14]);
        record.senderAddress = fieldSetFlags()[15] ? this.senderAddress : (java.lang.String) defaultValue(fields()[15]);
        record.sentDate = fieldSetFlags()[16] ? this.sentDate : (java.lang.String) defaultValue(fields()[16]);
        record.sentTime = fieldSetFlags()[17] ? this.sentTime : (java.lang.String) defaultValue(fields()[17]);
        record.taskId = fieldSetFlags()[18] ? this.taskId : (java.lang.String) defaultValue(fields()[18]);
        record.transactionId = fieldSetFlags()[19] ? this.transactionId : (java.lang.String) defaultValue(fields()[19]);
        if (fileInfoBuilder != null) {
          record.fileInfo = this.fileInfoBuilder.build();
        } else {
          record.fileInfo = fieldSetFlags()[20] ? this.fileInfo : (com.opentext.bn.converters.avro.entity.PayloadRef) defaultValue(fields()[20]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DocumentEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<DocumentEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DocumentEvent>
    READER$ = (org.apache.avro.io.DatumReader<DocumentEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
